Test Case 1 (time used: 3m26.096s, machine Intel Xeon E3-1275 with 64GB memory):

Select your benchmark:
1)use-after-free
2)double-free
3)stack overflow
4)heap overflow
5)stack memory leak
6)heap memory leak
7)null pointer dereference
8)ineffectual condition
1

[EMULATION] attempted sequence:  ('ecall_create', 'ecall_use', 'ecall_destroy', 'ecall_create', 'ecall_use', 'ecall_destroy')
[LIMITATION] number of seeds attempted exceed ...
[EMULATION] attempted sequence:  ('ecall_create', 'ecall_use', 'ecall_destroy', 'ecall_create', 'ecall_destroy', 'ecall_use')
[UAF-REPORT] Potential Use-after-free (UAF) at 0xeee: mov ecx, dword ptr [rax]
Try to use memory at 0x30000064 - 0x30000067
Allocated memory range is 0x30000064 - 0x30000070
Allocated memory at 0xe86 and Freed at 0xf3a

Recent 200 emulated instructions: 
0x167b3: jne 0x167c1
0x167c1: pop rcx
0x167c2: ret
0xacbe: leave
0xacbf: ret
0xe55: cmp rax, 3
0xe59: jbe 0xebc
0xebc: mov qword ptr [rip + 0x33599], 0
0xec7: add rsp, 0x10
0xecb: pop rbp
0xecc: ret
0xf20: push rbp
0xf21: mov rbp, rsp
0xf24: cmp qword ptr [rip + 0x33534], 0
0xf2c: jne 0xf30
0xf2e: jmp 0xf3f
0xf3f: pop rbp
0xf40: ret
0xed0: push rbp
0xed1: mov rbp, rsp
0xed4: sub rsp, 0x10
0xed8: mov dword ptr [rbp - 4], edi
0xedb: cmp qword ptr [rip + 0x3357d], 0
0xee3: jne 0xee7
0xee5: jmp 0xf1a
0xf1a: add rsp, 0x10
0xf1e: pop rbp
0xf1f: ret
0xe40: push rbp
0xe41: mov rbp, rsp
0xe44: sub rsp, 0x10
0xe48: mov qword ptr [rbp - 8], rdi
0xe4c: mov rdi, qword ptr [rbp - 8]
0xe50: call 0xaca6
0xaca6: push rbp
0xaca7: mov rbp, rsp
0xacaa: sub rsp, 0x10
0xacae: mov qword ptr [rbp - 8], rdi
0xacb2: mov rax, qword ptr [rbp - 8]
0xacb6: mov rdi, rax
0xacb9: call 0x16790
0x16790: 
0x16794: push rsi
0x16795: mov rdx, rdi
0x16798: mov rcx, rdx
0x1679b: and rdx, 0xfffffffffffffff0
0x1679f: pxor xmm0, xmm0
0x167a3: pcmpeqb xmm0, xmmword ptr [rdx]
0x167a7: pmovmskb eax, xmm0
0x167ab: and ecx, 0xf
0x167ae: shr eax, cl
0x167b0: bsf eax, eax
0x167b3: jne 0x167c1
0x167b5: mov rax, rdx
0x167b8: add rdx, rcx
0x167bb: call qword ptr [rip + 0x1c7e7]
0x16dd0: 
0x16dd4: pxor xmm0, xmm0
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dec: bsf ecx, ecx
0x16def: sub rcx, rdx
0x16df2: add rax, rcx
0x16df5: ret
0x167c1: pop rcx
0x167c2: ret
0xacbe: leave
0xacbf: ret
0xe55: cmp rax, 3
0xe59: jbe 0xebc
0xe5b: mov rax, qword ptr [rbp - 8]
0xe5f: movsx ecx, byte ptr [rax]
0xe62: cmp ecx, 0x55
0xe65: jne 0xebc
0xebc: mov qword ptr [rip + 0x33599], 0
0xec7: add rsp, 0x10
0xecb: pop rbp
0xecc: ret
0xed0: push rbp
0xed1: mov rbp, rsp
0xed4: sub rsp, 0x10
0xed8: mov dword ptr [rbp - 4], edi
0xedb: cmp qword ptr [rip + 0x3357d], 0
0xee3: jne 0xee7
0xee5: jmp 0xf1a
0xf1a: add rsp, 0x10
0xf1e: pop rbp
0xf1f: ret
0xf20: push rbp
0xf21: mov rbp, rsp
0xf24: cmp qword ptr [rip + 0x33534], 0
0xf2c: jne 0xf30
0xf2e: jmp 0xf3f
0xf3f: pop rbp
0xf40: ret
0xe40: push rbp
0xe41: mov rbp, rsp
0xe44: sub rsp, 0x10
0xe48: mov qword ptr [rbp - 8], rdi
0xe4c: mov rdi, qword ptr [rbp - 8]
0xe50: call 0xaca6
0xaca6: push rbp
0xaca7: mov rbp, rsp
0xacaa: sub rsp, 0x10
0xacae: mov qword ptr [rbp - 8], rdi
0xacb2: mov rax, qword ptr [rbp - 8]
0xacb6: mov rdi, rax
0xacb9: call 0x16790
0x16790: 
0x16794: push rsi
0x16795: mov rdx, rdi
0x16798: mov rcx, rdx
0x1679b: and rdx, 0xfffffffffffffff0
0x1679f: pxor xmm0, xmm0
0x167a3: pcmpeqb xmm0, xmmword ptr [rdx]
0x167a7: pmovmskb eax, xmm0
0x167ab: and ecx, 0xf
0x167ae: shr eax, cl
0x167b0: bsf eax, eax
0x167b3: jne 0x167c1
0x167b5: mov rax, rdx
0x167b8: add rdx, rcx
0x167bb: call qword ptr [rip + 0x1c7e7]
0x16dd0: 
0x16dd4: pxor xmm0, xmm0
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dec: bsf ecx, ecx
0x16def: sub rcx, rdx
0x16df2: add rax, rcx
0x16df5: ret
0x167c1: pop rcx
0x167c2: ret
0xacbe: leave
0xacbf: ret
0xe55: cmp rax, 3
0xe59: jbe 0xebc
0xe5b: mov rax, qword ptr [rbp - 8]
0xe5f: movsx ecx, byte ptr [rax]
0xe62: cmp ecx, 0x55
0xe65: jne 0xebc
0xe67: mov rax, qword ptr [rbp - 8]
0xe6b: movsx ecx, byte ptr [rax + 1]
0xe6f: cmp ecx, 0x41
0xe72: jne 0xebc
0xe74: mov rax, qword ptr [rbp - 8]
0xe78: movsx ecx, byte ptr [rax + 2]
0xe7c: cmp ecx, 0x46
0xe7f: jne 0xebc
0xe81: mov edi, 0xc
0xe86: call 0x839f
0xe8b: mov qword ptr [rip + 0x335ce], rax
0xe92: mov rax, qword ptr [rip + 0x335c7]
0xe99: mov dword ptr [rax], 1
0xe9f: mov rax, qword ptr [rip + 0x335ba]
0xea6: mov cx, word ptr [rip + 0x2a933]
0xead: mov word ptr [rax + 4], cx
0xeb1: mov dl, byte ptr [rip + 0x2a92b]
0xeb7: mov byte ptr [rax + 6], dl
0xeba: jmp 0xec7
0xec7: add rsp, 0x10
0xecb: pop rbp
0xecc: ret
0xf20: push rbp
0xf21: mov rbp, rsp
0xf24: cmp qword ptr [rip + 0x33534], 0
0xf2c: jne 0xf30
0xf30: mov rax, qword ptr [rip + 0x33529]
0xf37: mov rdi, rax
0xf3a: call 0x8e96
0xf3f: pop rbp
0xf40: ret
0xed0: push rbp
0xed1: mov rbp, rsp
0xed4: sub rsp, 0x10
0xed8: mov dword ptr [rbp - 4], edi
0xedb: cmp qword ptr [rip + 0x3357d], 0
0xee3: jne 0xee7
0xee7: mov rax, qword ptr [rip + 0x33572]
0xeee: mov ecx, dword ptr [rax]
Seed information: 
0x30000000 [ 0x55 ]  0x30000001 [ 0x41 ]  0x30000002 [ 0x46 ]  0x30000003 [ 0xff ]  0x30000004 [ 0xff ]  0x30000005 [ 0xff ]  0x30000006 [ 0xff ]  0x30000007 [ 0xff ]  0x30000008 [ 0xff ]  0x30000009 [ 0xff ]  0x3000000a [ 0xff ]  0x3000000b [ 0xff ]  0x3000000c [ 0xff ]  0x3000000d [ 0xff ]  0x3000000e [ 0xff ]  0x3000000f [ 0xff ]  0x30000010 [ 0xff ]  0x30000011 [ 0xff ]  0x30000012 [ 0xff ]  0x30000013 [ 0xff ]  0x30000014 [ 0xff ]  0x30000015 [ 0xff ]  0x30000016 [ 0xff ]  0x30000017 [ 0xff ]  0x30000018 [ 0xff ]  0x30000019 [ 0xff ]  0x3000001a [ 0xff ]  0x3000001b [ 0xff ]  0x3000001c [ 0xff ]  0x3000001d [ 0xff ]  0x3000001e [ 0xff ]  0x3000001f [ 0xff ]  0x30000020 [ 0xff ]  0x30000021 [ 0xff ]  0x30000022 [ 0xff ]  0x30000023 [ 0xff ]  0x30000024 [ 0xff ]  0x30000025 [ 0xff ]  0x30000026 [ 0xff ]  0x30000027 [ 0xff ]  0x30000028 [ 0xff ]  0x30000029 [ 0xff ]  0x3000002a [ 0xff ]  0x3000002b [ 0xff ]  0x3000002c [ 0xff ]  0x3000002d [ 0xff ]  0x3000002e [ 0xff ]  0x3000002f [ 0xff ]  0x30000030 [ 0xff ]  0x30000031 [ 0xff ]  0x30000032 [ 0xff ]  0x30000033 [ 0x41 ]  0x30000034 [ 0xff ]  0x30000035 [ 0xff ]  0x30000036 [ 0xff ]  0x30000037 [ 0xff ]  0x30000038 [ 0xff ]  0x30000039 [ 0xff ]  0x3000003a [ 0xff ]  0x3000003b [ 0xff ]  0x3000003c [ 0xff ]  0x3000003d [ 0xff ]  0x3000003e [ 0xff ]  0x3000003f [ 0xff ]  0x30000040 [ 0xff ]  0x30000041 [ 0xff ]  0x30000042 [ 0xff ]  0x30000043 [ 0xff ]  0x30000044 [ 0xff ]  0x30000045 [ 0xff ]  0x30000046 [ 0xff ]  0x30000047 [ 0xff ]  0x30000048 [ 0xff ]  0x30000049 [ 0xff ]  0x3000004a [ 0xff ]  0x3000004b [ 0xff ]  0x3000004c [ 0xff ]  0x3000004d [ 0xff ]  0x3000004e [ 0xff ]  0x3000004f [ 0x0 ]  0x30000050 [ 0xff ]  0x30000051 [ 0xff ]  0x30000052 [ 0xff ]  0x30000053 [ 0xff ]  0x30000054 [ 0xff ]  0x30000055 [ 0xff ]  0x30000056 [ 0xff ]  0x30000057 [ 0xff ]  0x30000058 [ 0xff ]  0x30000059 [ 0xff ]  0x3000005a [ 0xff ]  0x3000005b [ 0xff ]  0x3000005c [ 0xff ]  0x3000005d [ 0xff ]  0x3000005e [ 0x0 ]  0x3000005f [ 0xff ]  0x30000060 [ 0xff ]  0x30000061 [ 0xff ]  0x30000062 [ 0xff ]  0x30000063 [ 0xff ]  0x30000064 [ 0xff ]  0x30000065 [ 0xff ]  0x30000066 [ 0xff ]  0x30000067 [ 0xff ]  0x30000068 [ 0xff ]  0x30000069 [ 0xff ]  0x3000006a [ 0xff ]  0x3000006b [ 0xff ]  0x3000006c [ 0xff ]  0x3000006d [ 0xff ]  0x3000006e [ 0x0 ]  0x3000006f [ 0xff ]  0x30000070 [ 0xff ]  0x9ff9fff3 [ 0x0 ]  0x9ff9fff4 [ 0x0 ]  0x9ff9fff5 [ 0x0 ]  0x9ff9fff6 [ 0x0 ]  0x9ffafff3 [ 0xfe ]  0x9ffafff4 [ 0x0 ]  0x9ffafff5 [ 0x0 ]  0x9ffafff6 [ 0x0 ]  0x9ffdfff3 [ 0x1 ]  0x9ffdfff4 [ 0x0 ]  0x9ffdfff5 [ 0x0 ]  0x9ffdfff6 [ 0x0 ]  [UAF-REPORT] Potential Use-after-free (UAF) at 0xf13: mov edi, dword ptr [rax]
Try to use memory at 0x30000064 - 0x30000067
Allocated memory range is 0x30000064 - 0x30000070
Allocated memory at 0xe86 and Freed at 0xf3a

Recent 200 emulated instructions: 
0xe5f: movsx ecx, byte ptr [rax]
0xe62: cmp ecx, 0x55
0xe65: jne 0xebc
0xebc: mov qword ptr [rip + 0x33599], 0
0xec7: add rsp, 0x10
0xecb: pop rbp
0xecc: ret
0xf20: push rbp
0xf21: mov rbp, rsp
0xf24: cmp qword ptr [rip + 0x33534], 0
0xf2c: jne 0xf30
0xf2e: jmp 0xf3f
0xf3f: pop rbp
0xf40: ret
0xed0: push rbp
0xed1: mov rbp, rsp
0xed4: sub rsp, 0x10
0xed8: mov dword ptr [rbp - 4], edi
0xedb: cmp qword ptr [rip + 0x3357d], 0
0xee3: jne 0xee7
0xee5: jmp 0xf1a
0xf1a: add rsp, 0x10
0xf1e: pop rbp
0xf1f: ret
0xe40: push rbp
0xe41: mov rbp, rsp
0xe44: sub rsp, 0x10
0xe48: mov qword ptr [rbp - 8], rdi
0xe4c: mov rdi, qword ptr [rbp - 8]
0xe50: call 0xaca6
0xaca6: push rbp
0xaca7: mov rbp, rsp
0xacaa: sub rsp, 0x10
0xacae: mov qword ptr [rbp - 8], rdi
0xacb2: mov rax, qword ptr [rbp - 8]
0xacb6: mov rdi, rax
0xacb9: call 0x16790
0x16790: 
0x16794: push rsi
0x16795: mov rdx, rdi
0x16798: mov rcx, rdx
0x1679b: and rdx, 0xfffffffffffffff0
0x1679f: pxor xmm0, xmm0
0x167a3: pcmpeqb xmm0, xmmword ptr [rdx]
0x167a7: pmovmskb eax, xmm0
0x167ab: and ecx, 0xf
0x167ae: shr eax, cl
0x167b0: bsf eax, eax
0x167b3: jne 0x167c1
0x167b5: mov rax, rdx
0x167b8: add rdx, rcx
0x167bb: call qword ptr [rip + 0x1c7e7]
0x16dd0: 
0x16dd4: pxor xmm0, xmm0
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dec: bsf ecx, ecx
0x16def: sub rcx, rdx
0x16df2: add rax, rcx
0x16df5: ret
0x167c1: pop rcx
0x167c2: ret
0xacbe: leave
0xacbf: ret
0xe55: cmp rax, 3
0xe59: jbe 0xebc
0xe5b: mov rax, qword ptr [rbp - 8]
0xe5f: movsx ecx, byte ptr [rax]
0xe62: cmp ecx, 0x55
0xe65: jne 0xebc
0xebc: mov qword ptr [rip + 0x33599], 0
0xec7: add rsp, 0x10
0xecb: pop rbp
0xecc: ret
0xed0: push rbp
0xed1: mov rbp, rsp
0xed4: sub rsp, 0x10
0xed8: mov dword ptr [rbp - 4], edi
0xedb: cmp qword ptr [rip + 0x3357d], 0
0xee3: jne 0xee7
0xee5: jmp 0xf1a
0xf1a: add rsp, 0x10
0xf1e: pop rbp
0xf1f: ret
0xf20: push rbp
0xf21: mov rbp, rsp
0xf24: cmp qword ptr [rip + 0x33534], 0
0xf2c: jne 0xf30
0xf2e: jmp 0xf3f
0xf3f: pop rbp
0xf40: ret
0xe40: push rbp
0xe41: mov rbp, rsp
0xe44: sub rsp, 0x10
0xe48: mov qword ptr [rbp - 8], rdi
0xe4c: mov rdi, qword ptr [rbp - 8]
0xe50: call 0xaca6
0xaca6: push rbp
0xaca7: mov rbp, rsp
0xacaa: sub rsp, 0x10
0xacae: mov qword ptr [rbp - 8], rdi
0xacb2: mov rax, qword ptr [rbp - 8]
0xacb6: mov rdi, rax
0xacb9: call 0x16790
0x16790: 
0x16794: push rsi
0x16795: mov rdx, rdi
0x16798: mov rcx, rdx
0x1679b: and rdx, 0xfffffffffffffff0
0x1679f: pxor xmm0, xmm0
0x167a3: pcmpeqb xmm0, xmmword ptr [rdx]
0x167a7: pmovmskb eax, xmm0
0x167ab: and ecx, 0xf
0x167ae: shr eax, cl
0x167b0: bsf eax, eax
0x167b3: jne 0x167c1
0x167b5: mov rax, rdx
0x167b8: add rdx, rcx
0x167bb: call qword ptr [rip + 0x1c7e7]
0x16dd0: 
0x16dd4: pxor xmm0, xmm0
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dd8: add rax, 0x10
0x16ddc: movdqu xmm1, xmmword ptr [rax]
0x16de0: pcmpeqb xmm1, xmm0
0x16de4: pmovmskb ecx, xmm1
0x16de8: test ecx, ecx
0x16dea: je 0x16dd8
0x16dec: bsf ecx, ecx
0x16def: sub rcx, rdx
0x16df2: add rax, rcx
0x16df5: ret
0x167c1: pop rcx
0x167c2: ret
0xacbe: leave
0xacbf: ret
0xe55: cmp rax, 3
0xe59: jbe 0xebc
0xe5b: mov rax, qword ptr [rbp - 8]
0xe5f: movsx ecx, byte ptr [rax]
0xe62: cmp ecx, 0x55
0xe65: jne 0xebc
0xe67: mov rax, qword ptr [rbp - 8]
0xe6b: movsx ecx, byte ptr [rax + 1]
0xe6f: cmp ecx, 0x41
0xe72: jne 0xebc
0xe74: mov rax, qword ptr [rbp - 8]
0xe78: movsx ecx, byte ptr [rax + 2]
0xe7c: cmp ecx, 0x46
0xe7f: jne 0xebc
0xe81: mov edi, 0xc
0xe86: call 0x839f
0xe8b: mov qword ptr [rip + 0x335ce], rax
0xe92: mov rax, qword ptr [rip + 0x335c7]
0xe99: mov dword ptr [rax], 1
0xe9f: mov rax, qword ptr [rip + 0x335ba]
0xea6: mov cx, word ptr [rip + 0x2a933]
0xead: mov word ptr [rax + 4], cx
0xeb1: mov dl, byte ptr [rip + 0x2a92b]
0xeb7: mov byte ptr [rax + 6], dl
0xeba: jmp 0xec7
0xec7: add rsp, 0x10
0xecb: pop rbp
0xecc: ret
0xf20: push rbp
0xf21: mov rbp, rsp
0xf24: cmp qword ptr [rip + 0x33534], 0
0xf2c: jne 0xf30
0xf30: mov rax, qword ptr [rip + 0x33529]
0xf37: mov rdi, rax
0xf3a: call 0x8e96
0xf3f: pop rbp
0xf40: ret
0xed0: push rbp
0xed1: mov rbp, rsp
0xed4: sub rsp, 0x10
0xed8: mov dword ptr [rbp - 4], edi
0xedb: cmp qword ptr [rip + 0x3357d], 0
0xee3: jne 0xee7
0xee7: mov rax, qword ptr [rip + 0x33572]
0xeee: mov ecx, dword ptr [rax]
0xef0: cmp ecx, dword ptr [rbp - 4]
0xef3: jne 0xf0c
0xf0c: mov rax, qword ptr [rip + 0x3354d]
0xf13: mov edi, dword ptr [rax]
Seed information: 
0x30000000 [ 0x55 ]  0x30000001 [ 0x41 ]  0x30000002 [ 0x46 ]  0x30000003 [ 0xff ]  0x30000004 [ 0xff ]  0x30000005 [ 0xff ]  0x30000006 [ 0xff ]  0x30000007 [ 0xff ]  0x30000008 [ 0xff ]  0x30000009 [ 0xff ]  0x3000000a [ 0xff ]  0x3000000b [ 0xff ]  0x3000000c [ 0xff ]  0x3000000d [ 0xff ]  0x3000000e [ 0xff ]  0x3000000f [ 0xff ]  0x30000010 [ 0xff ]  0x30000011 [ 0xff ]  0x30000012 [ 0xff ]  0x30000013 [ 0xff ]  0x30000014 [ 0xff ]  0x30000015 [ 0xff ]  0x30000016 [ 0xff ]  0x30000017 [ 0xff ]  0x30000018 [ 0xff ]  0x30000019 [ 0xff ]  0x3000001a [ 0xff ]  0x3000001b [ 0xff ]  0x3000001c [ 0xff ]  0x3000001d [ 0xff ]  0x3000001e [ 0xff ]  0x3000001f [ 0xff ]  0x30000020 [ 0xff ]  0x30000021 [ 0xff ]  0x30000022 [ 0xff ]  0x30000023 [ 0xff ]  0x30000024 [ 0xff ]  0x30000025 [ 0xff ]  0x30000026 [ 0xff ]  0x30000027 [ 0xff ]  0x30000028 [ 0xff ]  0x30000029 [ 0xff ]  0x3000002a [ 0xff ]  0x3000002b [ 0xff ]  0x3000002c [ 0xff ]  0x3000002d [ 0xff ]  0x3000002e [ 0xff ]  0x3000002f [ 0xff ]  0x30000030 [ 0xff ]  0x30000031 [ 0xff ]  0x30000032 [ 0xff ]  0x30000033 [ 0x80 ]  0x30000034 [ 0xff ]  0x30000035 [ 0xff ]  0x30000036 [ 0xff ]  0x30000037 [ 0xff ]  0x30000038 [ 0xff ]  0x30000039 [ 0xff ]  0x3000003a [ 0xff ]  0x3000003b [ 0xff ]  0x3000003c [ 0xff ]  0x3000003d [ 0xff ]  0x3000003e [ 0xff ]  0x3000003f [ 0xff ]  0x30000040 [ 0xff ]  0x30000041 [ 0xff ]  0x30000042 [ 0xff ]  0x30000043 [ 0xff ]  0x30000044 [ 0xff ]  0x30000045 [ 0xff ]  0x30000046 [ 0xff ]  0x30000047 [ 0xff ]  0x30000048 [ 0xff ]  0x30000049 [ 0xff ]  0x3000004a [ 0xff ]  0x3000004b [ 0xff ]  0x3000004c [ 0xff ]  0x3000004d [ 0xff ]  0x3000004e [ 0xff ]  0x3000004f [ 0xff ]  0x30000050 [ 0x0 ]  0x30000051 [ 0xff ]  0x30000052 [ 0xff ]  0x30000053 [ 0xff ]  0x30000054 [ 0xff ]  0x30000055 [ 0xff ]  0x30000056 [ 0xff ]  0x30000057 [ 0xff ]  0x30000058 [ 0xff ]  0x30000059 [ 0xff ]  0x3000005a [ 0xff ]  0x3000005b [ 0xff ]  0x3000005c [ 0xff ]  0x3000005d [ 0xff ]  0x3000005e [ 0xff ]  0x3000005f [ 0xff ]  0x30000060 [ 0xff ]  0x30000061 [ 0xff ]  0x30000062 [ 0xff ]  0x30000063 [ 0xff ]  0x30000064 [ 0xff ]  0x30000065 [ 0xff ]  0x30000066 [ 0xff ]  0x30000067 [ 0xff ]  0x30000068 [ 0xff ]  0x30000069 [ 0xff ]  0x3000006a [ 0xff ]  0x3000006b [ 0xff ]  0x3000006c [ 0xff ]  0x3000006d [ 0xff ]  0x3000006e [ 0x0 ]  0x3000006f [ 0xff ]  0x30000070 [ 0xff ]  0x9ff9fff3 [ 0x0 ]  0x9ff9fff4 [ 0x0 ]  0x9ff9fff5 [ 0x0 ]  0x9ff9fff6 [ 0x0 ]  0x9ffafff3 [ 0xfe ]  0x9ffafff4 [ 0x0 ]  0x9ffafff5 [ 0x0 ]  0x9ffafff6 [ 0x0 ]  0x9ffdfff3 [ 0xfe ]  0x9ffdfff4 [ 0x0 ]  0x9ffdfff5 [ 0x0 ]  0x9ffdfff6 [ 0x0 ]  ./run.sh: line 62:  4131 Aborted                 (core dumped) python "$SYMEMU/coverage.py" "$PROJECT_DIR/enclave.so" unsafe_input_complete.tmp unsafe_ecall_stat.tmp $max_seed 1000000

real    3m26.096s
user    3m23.258s
sys    0m0.620s